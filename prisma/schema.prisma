// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Models

model Lid {
  id                Int        @id @default(autoincrement())
  first_name        String
  last_name         String
  phone_number      String
  test_date         DateTime
  trial_lesson_date Int
  trial_lesson_time String
  LidStatus         LidStatus? @relation(fields: [lid_statusId], references: [id])
  lid_statusId      Int?

  ReasonLid       ReasonLid? @relation(fields: [cancel_reasonId], references: [id])
  cancel_reasonId Int?

  @@map("lid")
}

model LidStatus {
  id     Int    @id @default(autoincrement())
  status String
  lid    Lid[]

  @@map("lid_status")
}

model ReasonLid {
  id         Int    @id @default(autoincrement())
  reason_lid String
  Lid        Lid[]

  @@map("reason_lid")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String

  @@map("role")
}

model Branch {
  id          Int    @id @default(autoincrement())
  name        String
  address     String
  call_number String

  @@map("branch")
}

model Staff {
  id                   Int      @id @default(autoincrement())
  first_name           String
  last_name            String
  phone_number         String
  login                String   @unique
  hashed_password      String

  is_active            Boolean? @default(false)
  hashed_refresh_token String?

  // roles                 StaffRole[]
  @@map("staff")
}


model Group {
  id       Int    @id @default(autoincrement())
  name     String
  lesson_start_time String
  lesson_end_time String
  lesson_week_day String
  room_number  Int
  room_floor Int
  lesson_quant Int
  is_active Boolean

  @@map("group")
}

model Student {
  id                   Int      @id @default(autoincrement())
  first_name           String
  last_name            String
  phone_number         String
  birthday              String 
  gender                 String
  is_active            Boolean? @default(false)
  @@map("student")

}

model Payment{
  id                Int        @id @default(autoincrement())
  payment_last_date         String
  payment_date      String
  price Int
  is_paid Boolean
  total_amount Int
  

  @@map("payment")
}

model Lesson{
  id                Int        @id @default(autoincrement())
  lesson_date         String
  lesson_time      String
  lesson_theme String
  lesson_number Int
  is_finished Boolean
}

// model StaffRole {
//   staff   Staff @relation(fields: [staffId], references: [id])
//   staffId Int
  

//   @@id([staffId ]) 
//   @@map("staff_role") 
// }
